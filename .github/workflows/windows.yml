# Copyright (C) Viktor Szakats
#
# SPDX-License-Identifier: curl

name: windows

on:
  push:
    branches:
      - master
      - '*/ci'
    paths-ignore:
      - '**/*.md'
      - '.azure-pipelines.yml'
      - '.circleci/**'
      - '.cirrus.yml'
      - 'appveyor.*'
      - 'packages/**'
      - 'plan9/**'
      - 'projects/**'
      - 'winbuild/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '.azure-pipelines.yml'
      - '.circleci/**'
      - '.cirrus.yml'
      - 'appveyor.*'
      - 'packages/**'
      - 'plan9/**'
      - 'projects/**'
      - 'winbuild/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: {}

jobs:
  cygwin:
    name: "cygwin (${{ matrix.build }}, ${{ matrix.platform }}, ${{ matrix.config }})"
    runs-on: windows-latest
    timeout-minutes: 30
    env:
      SHELLOPTS: 'igncr'
    strategy:
      matrix:
        include:
          - { build: 'automake', platform: 'x86_64', tflags: '', config: '--enable-debug --disable-threaded-resolver' }
      fail-fast: false
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
      - uses: cygwin/cygwin-install-action@v4
        with:
          platform: ${{ matrix.platform }}
          packages: autoconf libtool ${{ matrix.build }} gcc-core gcc-g++ binutils make libssl-devel zlib-devel libpsl-devel
          site: https://mirrors.kernel.org/sourceware/cygwin/

      - name: 'autotools'
        if: ${{ matrix.build == 'automake' }}
        timeout-minutes: 30
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: |
          export PATH="/usr/bin:$(cygpath ${SYSTEMROOT})/system32"
          autoreconf -fi
          export TFLAGS='-j3 ${{ matrix.tflags }}'
          if [ -x "$(cygpath -u "${SYSTEMROOT}/System32/curl.exe")" ]; then
            TFLAGS+=" -ac $(cygpath -u "${SYSTEMROOT}/System32/curl.exe")"
          fi
          mkdir bld && cd bld && ../configure --enable-warnings --enable-werror \
            --enable-websockets \
            --with-openssl --with-libpsl ${{ matrix.config }}
          make -j3 V=1
          find . -name '*.exe' -o -name '*.dll'
          src/curl.exe --disable --version
          make -j3 V=1 examples
          make -j3 -C tests V=1
          make -j3 V=1 test-ci

  msys2:
    name: "msys2 (${{ matrix.build }}, ${{ matrix.sys }}, ${{ matrix.env }}, ${{ matrix.config }})"
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - { build: 'autotools', sys: 'msys', env: 'x86_64', tflags: '!19                !1233', config: '--enable-debug --disable-threaded-resolver --disable-proxy' }
          - { build: 'autotools', sys: 'msys', env: 'x86_64', tflags: '!19 !504 !704 !705 !1233', config: '--enable-debug --disable-threaded-resolver' }
          - { build: 'autotools', sys: 'msys', env: 'x86_64', tflags: '!19 !504 !704 !705 !1233', config: '' }
      fail-fast: false
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.sys == 'msys' }}
        with:
          msystem: ${{ matrix.sys }}
          install: gcc ${{ matrix.build }} make openssl-devel zlib-devel libpsl-devel

      - name: 'autotools'
        if: ${{ matrix.build == 'autotools' }}
        timeout-minutes: 30
        shell: msys2 {0}
        run: |
          autoreconf -fi
          export TFLAGS='-j3 ${{ matrix.tflags }}'
          if [ -x "$(cygpath -u "C:/msys64/usr/bin/curl.exe")" ]; then
            TFLAGS+=" -ac $(cygpath -u "C:/msys64/usr/bin/curl.exe")"
          fi
          mkdir bld && cd bld && ../configure --enable-warnings --enable-werror \
            --enable-websockets \
            --with-openssl --with-libpsl ${{ matrix.config }}
          make -j3 V=1
          find . -name '*.exe' -o -name '*.dll'
          src/curl.exe --disable --version
          make -j3 V=1 examples
          make -j3 -C tests V=1
          make -j3 V=1 test-ci
