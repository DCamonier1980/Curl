.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLMOPT_DEBUGFUNCTION 3 "17 Oct 2023" libcurl libcurl
.SH NAME
CURLMOPT_DEBUGFUNCTION \- debug callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_multi_setopt(CURLM *handle, CURLOPT_DEBUGFUNCTION,
                          debug_callback);
.SH DESCRIPTION
Pass a pointer to your callback function, which should match the prototype
that is defined for \fICURLOPT_DEBUGFUNCTION(3)\fP.

\fICURLMOPT_DEBUGFUNCTION(3)\fP and \fICURLMOPT_DEBUGDATA\fP can be used
as defaults for all easy handles that are added to the multi. They are also
used for internal handles, for examples when closing cached connections.
They take effect only for easy handles added to the multi handle afterwards.

Values underly the same restrictions and use patterns as defined for
\fICURLOPT_DEBUGFUNCTION(3)\fP and \fICURLOPT_DEBUGDATA(3)\fP.
.SH DEFAULT
NULL
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
main()
{
  struct data my_tracedata;

  GlobalInfo setup;
  /* ... use debug callback and custom pointer */
  curl_multi_setopt(multi, CURLMOPT_DEBUGFUNCTION, my_trace);
  curl_multi_setopt(multi, CURLMOPT_DEBUGDATA, &my_tracedata);
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CURLE_OK
.SH "SEE ALSO"
.BR curl_global_trace (3),
.BR CURLMOPT_DEBUGDATA (3),
.BR CURLOPT_DEBUGDATA (3),
.BR CURLOPT_DEBUGFUNCTION (3),
.BR CURLOPT_VERBOSE (3)
