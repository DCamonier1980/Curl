.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLSHOPT_VERBOSE 3 "17 Oct 2023" libcurl libcurl
.SH NAME
CURLSHOPT_VERBOSE \- verbose mode
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLSHcode curl_share_setopt(CURLSH *share, CURLSHOPT_DEBUGDATA,
                             long onoff);
.fi
.SH DESCRIPTION
Set the \fIonoff\fP parameter to 1 to make the library display a lot of
verbose information about its operations on \fIhandle\fPs used with
this share.

\fICURLSHOPT_VERBOSE(3)\fP can be used as default for all easy handles
that use this share via \fICURLOPT_SHARE(3)\fP. It is also used for
internal handles, for examples when closing cached connections.
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
main()
{
  struct data my_tracedata;

  share = curl_share_init();
  curl_share_setopt(share, CURLSHOPT_VERBOSE, 1L);
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CURLE_OK
.SH "SEE ALSO"
.BR CURLOPT_VERBOSE (3),
.BR CURLSHOPT_DEBUGFUNCTION (3),
.BR CURLSHOPT_DEBUGDATA (3)
