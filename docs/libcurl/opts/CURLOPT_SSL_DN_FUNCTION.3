.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2021, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.haxx.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_SSL_DN_FUNCTION 3 "11 May 2021" "libcurl 7.77.0" "curl_easy_setopt options"

.SH NAME
CURLOPT_SSL_DN_FUNCTION \- user callback for returning distinguished names of  a client certificate request
.SH SYNOPSIS
.nf
#include <curl/curl.h>

int dist_names_callback(void *distNames, void *userp);

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_DN_FUNCTION, dist_names_callback);

.SH DESCRIPTION
Pass a pointer to your callback function, which should match the prototype shown above.

This function gets called by libcurl when the TLS backend receives a client certificate request. The called function has the opportunity to set the client certificate at this point.

The function should return a CURL_SSL_DN_FUNCTION_OK on success, CURL_SSL_DN_FUNCTION_FAIL on failure.

Sample usage:
1. Set curl option: curl_easy_setopt(m_curl, CURLOPT_SSL_DN_FUNCTION, DistNamesCallback)
2. Implement callback:
int DistNamesCallback(void* distNames, void* state){
if(s_backend == CURLSSLBACKEND_SCHANNEL){
const auto issuerList = reinterpret_cast<const SecPkgContext_IssuerListInfoEx*>(distNames);
....
}
}

.SH PROTOCOLS
As of now SSL/TLS, SChannel provider only
.SH AVAILABILITY
Added in 7.77.0.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR curl_easy_getinfo "(3), " curl_easy_setopt "(3), "
.BR CURLOPT_SSL_DN_DATA "(3), "
