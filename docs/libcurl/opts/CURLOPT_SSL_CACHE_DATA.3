.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2021, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_SSL_CACHE_DATA 3 "22 Jul 2021" "libcurl 7.79.0" "curl_easy_setopt options"
.SH NAME
CURLOPT_SSL_CACHE_DATA \- custom pointer passed to ssl_cache callback
.SH SYNOPSIS
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_CACHE_DATA, void *pointer);
.SH DESCRIPTION
Data \fIpointer\fP to pass to the ssl cache callback set by the option
\fICURLOPT_SSL_CACHE_FUNCTION(3)\fP, this is the pointer you'll get as fifth
parameter.
.SH DEFAULT
NULL
.SH PROTOCOLS
All TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.
.SH EXAMPLE
.nf
#include <curl/curl.h>
#include <stdio.h>

static CURLcode sslcache_function(CURL *curl, struct ssl_session_dump **dump,
                                  size_t *size, curl_free_callback *free_cb,
                                  void *parm)
{

  /* all set to go */
  return CURLE_OK;
}

int main(void)
{
  CURL * ch;
  CURLcode rv;

  rv=curl_global_init(CURL_GLOBAL_ALL);
  ch=curl_easy_init();
  rv=curl_easy_setopt(ch, CURLOPT_URL, "https://www.example.com/");

  /* Load one or more sessionid-s from persistent storage before retrieving
   * pages
   */
  rv=curl_easy_setopt(ch, CURLOPT_SSL_CACHE_FUNCTION, *sslcache_function);
  rv=curl_easy_setopt(ch, CURLOPT_SSL_CACHE_DATA, mypem);
  rv=curl_easy_perform(ch);
  if(rv==CURLE_OK)
    printf("*** transfer succeeded ***\\n");
  else
    printf("*** transfer failed ***\\n");

  curl_easy_cleanup(ch);
  curl_global_cleanup();
  return rv;
}
.fi
.SH AVAILABILITY
Added in 7.79.0 for OpenSSL. Other SSL backends are not supported.
.SH RETURN VALUE
CURLE_OK if supported; or an error such as:

CURLE_NOT_BUILT_IN - Not supported by the SSL backend

CURLE_UNKNOWN_OPTION
.SH "SEE ALSO"
.BR CURLOPT_SSL_CACHE_FUNCTION "(3), " CURLOPT_SSLVERSION "(3), "
