.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.haxx.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_RESOLVER_START_FUNCTION 3 "14 Feb 2018" "libcurl 7.59.1" "curl_easy_setopt options"
.SH NAME
CURLOPT_RESOLVER_START_FUNCTION \- set callback to be called before resolver starts
.SH SYNOPSIS
.nf
#include <curl/curl.h>

int resolver_alloc_cb(void *resolver_data, void *user_data);

CURLcode curl_easy_setopt(CURL *handle,
                          CURLOPT_RESOLVER_START_FUNCTION,
                          resolver_alloc_cb);
.SH DESCRIPTION
Pass a pointer to your callback function, which should match the prototype
shown above.

This callback function gets called by libcurl every time a new resolver request
is started. \fIresolver_data\fP points to resolver specific data.
For ares backend, resolver data is the channel used by ares. This can be used
to set up any desired option on the ares channel before it's used, for example
setting up socket callback options.

If he callback returns something other than CURLE_OK, the connection attemtp
will be aborted.

Set the \fIuser_data\fP argument with the \fICURLOPT_RESOLVER_START_DATA(3)\fP
option.

.SH DEFAULT
No callback will be made
.SH PROTOCOLS
For all protocols
.SH AVAILABILITY
Support for CURLOPT_RESOLVER_START_FUNCTION was added in version 7.59.1.
.SH RETURN VALUE
This will return CURLE_OK.
.SH EXAMPLE

static int resolver_alloc_cb(void *channel,
                              void *userdata)
{
    printf("Received resolver allocation callback, channel=%p userdata=%p\n",
      channel, userdata);

    return (CURLE_OK);
}

CURL *curl = curl_easy_init();
if(curl) {
  CURLcode res;
  curl_easy_setopt(curl, CURLOPT_RESOLVER_START_FUNCTION, resolver_alloc_cb);
  curl_easy_setopt(curl, CURLOPT_RESOLVER_START_DATA, curl);
  curl_easy_setopt(curl, CURLOPT_URL, "http://example.com");
  res = curl_easy_perform(curl);
  }
  curl_easy_cleanup(curl);
}

.SH "SEE ALSO"
.BR CURLOPT_RESOLVER_START_DATA "(3) "
