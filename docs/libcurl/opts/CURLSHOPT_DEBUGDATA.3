.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLSHOPT_DEBUGDATA 3 "17 Oct 2023" libcurl libcurl
.SH NAME
CURLSHOPT_DEBUGDATA \- pointer passed to the debug callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLSHcode curl_share_setopt(CURLSH *share, CURLSHOPT_DEBUGDATA,
                             void *pointer);
.fi
.SH DESCRIPTION
Pass a \fIpointer\fP to whatever you want passed in to your
\fICURLSHOPT_DEBUGFUNCTION(3)\fP in the last void * argument. This pointer is
not used by libcurl, it is only passed to the callback.

\fICURLSHOPT_DEBUGFUNCTION(3)\fP and \fICURLSHOPT_DEBUGDATA\fP can be used
as defaults for all easy handles that use the same share. They are also
used for internal handles, for example when closing cached connections.
They take effect only for easy handles when this share is set for them
using \fICURLOPT_SHARE(3)\fP.

Values have the same restrictions and use patterns as defined for
\fICURLOPT_DEBUGFUNCTION(3)\fP and \fICURLOPT_DEBUGDATA(3)\fP.
.SH DEFAULT
NULL
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
main()
{
  struct data my_tracedata;

  share = curl_share_init();
  curl_share_setopt(share, CURLSHOPT_DEBUGFUNCTION, my_trace);
  curl_share_setopt(share, CURLSHOPT_DEBUGDATA, &my_tracedata);
}
.fi
.SH AVAILABILITY
This option was added in libcurl 8.5.0.
.SH RETURN VALUE
Returns CURLE_OK
.SH "SEE ALSO"
.BR CURLMOPT_DEBUGFUNCTION (3),
.BR CURLOPT_DEBUGDATA (3),
.BR CURLOPT_DEBUGFUNCTION (3),
.BR CURLOPT_STDERR (3)
