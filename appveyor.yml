#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at https://curl.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
# SPDX-License-Identifier: curl
#
###########################################################################

# https://ci.appveyor.com/project/curlorg/curl/history
# AppVeyor configuration:
#   https://www.appveyor.com/docs/appveyor-yml/
# AppVeyor worker images:
#   https://www.appveyor.com/docs/windows-images-software/

version: 7.50.0.{build}

environment:
  matrix:
    # generated CMake-based Visual Studio Release builds

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Static, DEBUGBUILD=OFF, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'OFF'
      CURLDEBUG: 'OFF'
      SHARED: 'OFF'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Static, DEBUGBUILD=ON, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'ON'
      CURLDEBUG: 'OFF'
      SHARED: 'OFF'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Static, DEBUGBUILD=OFF, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'OFF'
      CURLDEBUG: 'ON'
      SHARED: 'OFF'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Static, DEBUGBUILD=ON, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'ON'
      CURLDEBUG: 'ON'
      SHARED: 'OFF'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Shared, DEBUGBUILD=OFF, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'OFF'
      CURLDEBUG: 'OFF'
      SHARED: 'ON'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Shared, DEBUGBUILD=ON, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'ON'
      CURLDEBUG: 'OFF'
      SHARED: 'ON'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Shared, DEBUGBUILD=OFF, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'OFF'
      CURLDEBUG: 'ON'
      SHARED: 'ON'

    - job_name: 'CMake, VS2022, Debug, x64, Schannel, Shared, DEBUGBUILD=ON, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'Visual Studio 17 2022'
      TARGET: '-A x64'
      PRJ_CFG: Debug
      DEBUG: 'ON'
      CURLDEBUG: 'ON'
      SHARED: 'ON'

    # generated CMake-based MSYS Makefiles builds (mingw cross-compiling)

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Static, DEBUGBUILD=OFF, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'OFF'
      CURLDEBUG: 'OFF'
      SHARED: 'OFF'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Static, DEBUGBUILD=ON, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'ON'
      CURLDEBUG: 'OFF'
      SHARED: 'OFF'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Static, DEBUGBUILD=OFF, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'OFF'
      CURLDEBUG: 'ON'
      SHARED: 'OFF'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Static, DEBUGBUILD=ON, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'ON'
      CURLDEBUG: 'ON'
      SHARED: 'OFF'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Shared, DEBUGBUILD=OFF, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'OFF'
      CURLDEBUG: 'OFF'
      SHARED: 'ON'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Shared, DEBUGBUILD=ON, CURLDEBUG=OFF'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'ON'
      CURLDEBUG: 'OFF'
      SHARED: 'ON'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Shared, DEBUGBUILD=OFF, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'OFF'
      CURLDEBUG: 'ON'
      SHARED: 'ON'

    - job_name: 'CMake, mingw-w64, gcc 13, Debug, x64, Schannel, Shared, DEBUGBUILD=ON, CURLDEBUG=ON'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2022'
      BUILD_SYSTEM: CMake
      PRJ_GEN: 'MSYS Makefiles'
      PRJ_CFG: Debug
      ADD_PATH: 'C:/msys64/mingw64/bin'
      MSYS2_ARG_CONV_EXCL: '/*'
      BUILD_OPT: -k
      DEBUG: 'ON'
      CURLDEBUG: 'ON'
      SHARED: 'ON'

    # autotools-based builds (NOT mingw cross-compiling, but msys2 native)

    - job_name: 'autotools, msys2, Debug, x86_64, no SSL'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2017'
      BUILD_SYSTEM: autotools
      CONFIG_ARGS: '--enable-warnings --enable-werror --without-ssl --enable-websockets --without-libpsl --enable-debug'
    - job_name: 'autotools, msys2, Debug, x86_64, no SSL, curldebug'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2017'
      BUILD_SYSTEM: autotools
      CONFIG_ARGS: '--enable-warnings --enable-werror --without-ssl --enable-websockets --without-libpsl --enable-debug --enable-curldebug'
    - job_name: 'autotools, msys2, Release, x86_64, no SSL, curldebug'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2017'
      BUILD_SYSTEM: autotools
      CONFIG_ARGS: '--enable-warnings --enable-werror --without-ssl --enable-websockets --without-libpsl                --enable-curldebug'
    - job_name: 'autotools, msys2, Release, x86_64, no SSL'
      APPVEYOR_BUILD_WORKER_IMAGE: 'Visual Studio 2017'
      BUILD_SYSTEM: autotools
      CONFIG_ARGS: '--enable-warnings --enable-werror --without-ssl --enable-websockets --without-libpsl'

install:
  - ps: |
      if($env:ADD_SHELL -ne $null) {
        $env:PATH = "$env:ADD_SHELL;$env:PATH"
      }
      else {
        $env:PATH = "C:/msys64/usr/bin;$env:PATH"
      }
      if($env:ADD_PATH -ne $null) {
        $env:PATH = "$env:ADD_PATH;$env:PATH"
      }

build_script:
  - cmd: sh -c ./appveyor.sh

clone_depth: 10

# select branches to avoid testing feature branches twice (as branch and as pull request)
branches:
  only:
    - master
    - /\/ci$/

skip_commits:
  files:
    - '.azure-pipelines.yml'
    - '.circleci/*'
    - '.cirrus.yml'
    - '.github/**/*'
    - 'packages/**/*'
    - 'plan9/**/*'

artifacts:
  - path: '**/curl.exe'
    name: curl
  - path: '**/*curl*.dll'
    name: libcurl dll
