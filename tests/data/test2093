<testcase>
<info>
<keywords>
HTTP
HTTP GET
HTTP Digest auth
HTTP NTLM auth
</keywords>
</info>
# Server-side
<reply>
<servercmd>
connection-number
</servercmd>

<!-- Request number 1: NTLM auth -->
<!-- This 401 response should not be sent, as the request should have NTLM Auth header -->
<data100>
HTTP/1.1 401 Need NTLM or Digest auth (#100)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: NTLM
WWW-Authenticate: Digest realm="testrealm", nonce="100"

This is not the real page!
</data100>
<data1101>
HTTP/1.1 401 NTLM intermediate (#100)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 33
WWW-Authenticate: NTLM TlRMTVNTUAACAAAACAAIADAAAACGgAEAq6U1NAWaJCIAAAAAAAAAAAAAAAA4AAAATlRMTUF1dGg=

This is still not the real page!
</data1101>
<data1102>
HTTP/1.1 200 Things are fine in server land (#100)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data1102>


<!-- Request number 2: Digest auth -->
<data200>
HTTP/1.1 401 Need NTLM or Digest auth (#200)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: NTLM
WWW-Authenticate: Digest realm="testrealm", nonce="200"

This is not the real page!
</data200>

<data1200>
HTTP/1.1 200 Things are fine in server land (#200)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data1200>

<!-- Requests number 3: NTLM auth -->
<!-- The same (already authorised) connection must be reused, no authentication headers -->
<data300>
HTTP/1.1 200 Things are fine in server land (#300)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data300>

<!-- Requests number 4: NTLM auth -->
<!-- The same (already authorised) connection must be reused, no authentication headers -->
<data310>
HTTP/1.1 200 Things are fine in server land (#310)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data310>

<!-- Requests number 5: Digest auth -->
<data400>
HTTP/1.1 401 Need NTLM or Digest auth (#400)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: Digest realm="testrealm", nonce="400"
WWW-Authenticate: NTLM

This is not the real page!
</data400>
<data1400>
HTTP/1.1 200 Things are fine in server land (#400)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data1400>

<!-- Requests number 6: Digest auth -->
<!-- This 401 response should not be sent, as the request should have Digest Auth header -->
<data410>
HTTP/1.1 401 Need NTLM or Digest auth (#410)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: Digest realm="testrealm", nonce="410"
WWW-Authenticate: NTLM

This is not the real page!
</data410>
<data1410>
HTTP/1.1 200 Things are fine in server land (#410)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</data1410>
<datacheck>
HTTP/1.1 401 NTLM intermediate (#100)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 33
WWW-Authenticate: NTLM TlRMTVNTUAACAAAACAAIADAAAACGgAEAq6U1NAWaJCIAAAAAAAAAAAAAAAA4AAAATlRMTUF1dGg=

HTTP/1.1 200 Things are fine in server land (#100)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
HTTP/1.1 401 Need NTLM or Digest auth (#200)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: NTLM
WWW-Authenticate: Digest realm="testrealm", nonce="200"

HTTP/1.1 200 Things are fine in server land (#200)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
HTTP/1.1 200 Things are fine in server land (#300)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
HTTP/1.1 200 Things are fine in server land (#310)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
HTTP/1.1 401 Need NTLM or Digest auth (#400)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 27
WWW-Authenticate: Digest realm="testrealm", nonce="400"
WWW-Authenticate: NTLM

HTTP/1.1 200 Things are fine in server land (#400)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
HTTP/1.1 200 Things are fine in server land (#410)
Server: Microsoft-IIS/10.0
Content-Type: text/html; charset=iso-8859-1
Content-Length: 32

Finally, this is the real page!
</datacheck>

</reply>

# Client-side
<client>
<features>
crypto
NTLM
!SSPI
</features>
<server>
http
</server>
<tool>
libauthrepeat
</tool>

<name>
HTTP NTLM then Digest auth repeat with the same credentials
</name>
<setenv>
# we force our own host name, in order to make the test machine independent
CURL_GETHOSTNAME=curlhost
# we try to use the LD_PRELOAD hack, if not a debug build
LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
</setenv>
<command>
http://%HOSTIP:%HTTPPORT/%TESTNUMBER NTLM-digest
</command>
<precheck>
chkhostname curlhost
</precheck>
</client>

# Verify data after the test has been "shot"
<verify>
<protocol>
[CONNECTION #1]
GET /%TESTNUMBER0100 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
Accept: */*

GET /%TESTNUMBER0100 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAACAAIAHAAAAALAAsAeAAAAAAAAAAAAAAAhoABAI+/Fp9IERAQ74OsdNPbBpg7o8CVwLSO4DtFyIcZHUMKVktWIu92s2892OVpd2JzqnRlc3R1c2VyV09SS1NUQVRJT04=
Accept: */*

[CONNECTION #2]
GET /%TESTNUMBER0200 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Accept: */*

GET /%TESTNUMBER0200 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Authorization: Digest username="testuser", realm="testrealm", nonce="200", uri="/%TESTNUMBER0200", response="7ad54e8c38e0c8027b4b2177b6052987"
Accept: */*

[CONNECTION #1]
GET /%TESTNUMBER0300 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Accept: */*

GET /%TESTNUMBER0310 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Accept: */*

[CONNECTION #2]
GET /%TESTNUMBER0400 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Accept: */*

GET /%TESTNUMBER0400 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Authorization: Digest username="testuser", realm="testrealm", nonce="400", uri="/%TESTNUMBER0400", response="7e3297c9ee208df1cb5e39abb80d4be9"
Accept: */*

GET /%TESTNUMBER0410 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
Authorization: Digest username="testuser", realm="testrealm", nonce="400", uri="/%TESTNUMBER0410", response="471c93e9189c9b41f680a413f292ea64"
Accept: */*

</protocol>
</verify>
</testcase>
